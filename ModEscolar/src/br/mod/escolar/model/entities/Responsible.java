package br.mod.escolar.model.entities;
// Generated 19/01/2011 01:44:19 by Hibernate Tools 3.2.1.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Responsible generated by hbm2java
 */
@Entity
@Table(name = "responsaveis", catalog = "escolar")
public class Responsible implements java.io.Serializable {

    /**
     * 
     */
    private static final long serialVersionUID = 1L;
    private Integer id;
    private Address address;
    private Contact contact;
    private Documentation documentation;
    private String nome;
    private String profissao;
    private String localTrabalho;
    private Date dataNascimento;
    private String religiao;

    public Responsible() {
    }

    public Responsible(Address enderecos, Contact contatos, Documentation documentacoes, String nome, String profissao, String localTrabalho, Date dataNascimento, String religiao) {
        this.address = enderecos;
        this.contact = contatos;
        this.documentation = documentacoes;
        this.nome = nome;
        this.profissao = profissao;
        this.localTrabalho = localTrabalho;
        this.dataNascimento = dataNascimento;
        this.religiao = religiao;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_endereco")
    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_contato")
    public Contact getContact() {
        return this.contact;
    }

    public void setContact(Contact contact) {
        this.contact = contact;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_documentacao")
    public Documentation getDocumentation() {
        return this.documentation;
    }

    public void setDocumentation(Documentation documentation) {
        this.documentation = documentation;
    }

    @Column(name = "nome")
    public String getNome() {
        return this.nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    @Column(name = "profissao", length = 63)
    public String getProfissao() {
        return this.profissao;
    }

    public void setProfissao(String profissao) {
        this.profissao = profissao;
    }

    @Column(name = "local_trabalho", length = 63)
    public String getLocalTrabalho() {
        return this.localTrabalho;
    }

    public void setLocalTrabalho(String localTrabalho) {
        this.localTrabalho = localTrabalho;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "data_nascimento", length = 10)
    public Date getDataNascimento() {
        return this.dataNascimento;
    }

    public void setDataNascimento(Date dataNascimento) {
        this.dataNascimento = dataNascimento;
    }

    @Column(name = "religiao", length = 45)
    public String getReligiao() {
        return this.religiao;
    }

    public void setReligiao(String religiao) {
        this.religiao = religiao;
    }

    @Override
    public String toString() {
        return "Responsible{" + "id=" + id + " address=" + address + " contact=" + contact + " ocumentation=" + documentation + " nome=" + nome + " profissao=" + profissao + " localTrabalho=" + localTrabalho + " dataNascimento=" + dataNascimento + " religiao=" + religiao + '}';
    }

    
}
